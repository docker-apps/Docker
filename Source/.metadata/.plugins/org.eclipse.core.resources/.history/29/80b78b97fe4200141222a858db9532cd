package com.mygdx.game;

import java.util.ArrayList;

import com.badlogic.gdx.ApplicationAdapter;
import com.badlogic.gdx.Gdx;
import com.badlogic.gdx.graphics.GL20;
import com.badlogic.gdx.graphics.OrthographicCamera;
import com.badlogic.gdx.graphics.Texture;
import com.badlogic.gdx.graphics.g2d.SpriteBatch;
import com.badlogic.gdx.math.Vector2;
import com.badlogic.gdx.math.Vector3;

public class MyTestGame extends ApplicationAdapter {
	SpriteBatch batch;
	Texture img;
	Texture ship;
	int shipX = 0;
	int shipY = 0;
	ArrayList<Vector2> shipPosList = new ArrayList<Vector2>();
	TestObject movingObject;
	
	@Override
	public void create () {
		OrthographicCamera camera = new OrthographicCamera(Gdx.graphics.getWidth(), Gdx.graphics.getHeight());
		camera.setToOrtho(true, Gdx.graphics.getWidth(), Gdx.graphics.getHeight());
		camera.update();

		batch = new SpriteBatch();
		batch.setProjectionMatrix(camera.combined);
		
		//img = new Texture("badlogic.jpg");
		ship = new Texture("raumschiff.png");
		
		movingObject = new TestObject(10, 10);
	}

	@Override
	public void render () {
		shipPosList.clear();
		for (int i = 0; i < 20; i++) {
			if(Gdx.input.isTouched(i)){
				Vector2 pos = new Vector2();
				pos.set(Gdx.input.getX(i), Gdx.input.getY(i));
				shipPosList.add(pos);
			}
		}
		
		Gdx.gl.glClearColor(0, 0, 1, 1);
		Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);
		batch.begin();
		//batch.draw(img, 0, 0);
		batch.draw(this.movingObject.getTexture(), this.movingObject.getPos().x, this.movingObject.getPos().y);
		for (Vector2 pos : shipPosList) {
			batch.draw(ship, pos.x, pos.y + 50);
		}
		batch.end();
	}
}
